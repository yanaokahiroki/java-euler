package experiment;

/**
 * S・H・D の 3 種類の文字からなる文字列に対して、以下の操作を考える。 操作 A:「1 個または 2 個の文字が同じ文字のペアに挟まれている」ような箇所について、挟まれてい
 * る文字を削除する。 操作 A の例を示す。
 *
 * <p>• SHDS → SS • DHSH → DHH • SDDDH → SDDH
 *
 * <p>さらに、文字列に対して、「操作 A を適用できる限り繰り返して適用する」ことを考える。ただし、操作 A
 * を適用できる箇所が複数ある場合は、そのうち最も先頭に近いものに対して適用するものとする。 ※「最も先頭に近いもの」が複数ある場合は、短いものを優先させる。 例えば、SDHHHHDHSH
 * から始めた場合、以下のような過程を経て、最終的には SDDHH という文字列が残る。 • SDHHHHDHSH → SDHHHDHSH → SDHHDHSH → SDDHSH → SDDHH
 * それでは、以下のような 800 文字からなる文字列から始めた場合に最終的に残る文字列は何か。
 *
 * <p>HDSDHHSDDHSHHSSSSDDHHSDHSSDDDHSHSDSHDSDHHSHHHDHHDH
 * HSSDSDHSSHSSSSDHDSSSDDHDDDHHHHHDHHSDDDHSHSSHHSSSDD
 * DHSHHSHHSSDDHSDDSDDDSSSHDDSDDHHSDDDDDHHSDSSSDHSHHS
 * SDHDSDHHHSHHDHHSSHDHDHDDHSHDHHSSDHDDDHSHHSSSDSDHSS
 * DHSHHSDSDDSSDHHHHSSHSSHSHSSDDDHDDSHDDDHSHDHSHDSSDD
 * HSDSHSSHDDDSHSDSDHSDDDDHDHHSDHDHHHSDSDHSSDHHHHDDSS
 * HSSDSSDDDSDHDHSDSDSHSDDDDSHSHHSDHDHSDDSDHDSHSSDDHS
 * SSSDDDHDSHHHSHDHSHSHDDDDSSHDSHHDSDSDSHDSDHDHDSHSHS
 * DHSHDSDDSDHSDSDDSHDDSSSHSSDHSDHHHDHDSDSHDSHDDHHDSD
 * DSDHSHSSHHDHSHHHHSDDDSHHHSDSHHHDHHDDDSDDSHSDHHSDHS
 * SDSHSSDSSSDHHHSDHSDHHSDHSSDSHSDDSDHDHSHSDDDDHHSHSH
 * DSHSHDDSDHDDHSHHHHSHSHHSSHSHSDDSSSDSDDDHDSSHHSHDSH
 */
public class Challenge_ロイヤルマリッジ {}
